{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of Untitled1.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNV5O7OMwOdYb7zWxqL9gaX",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/OlisettyVivek/OlisettyVivek/blob/main/python%20switch%20case\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "K9VoMLr3PH8_"
      },
      "outputs": [],
      "source": [
        "##check weather the program is triangle is iso,sca,equ using loops\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a=int(input(\"enter the angle\"))\n",
        "b=int(input(\"enter the angle\"))\n",
        "c=int(input(\"enter the angle\"))\n",
        "if a==b and b==c and c==a:\n",
        " print(\"it is a equilateral triangle\")\n",
        "elif  a==b or b==c or c==a:\n",
        " print(\"it is a isosceles triangle\") \n",
        "else:\n",
        " print(\"it is a scalene triangle\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5eIe8RsYPmnz",
        "outputId": "33259834-8767-41fb-bade-4c4174db1755"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the angle40\n",
            "enter the angle50\n",
            "enter the angle40\n",
            "it is a isosceles triangle\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##check weather the year is leap year or not"
      ],
      "metadata": {
        "id": "lEnCsjOQTwlz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "a=int(input(\"enter the year\"))\n",
        "if a%4==0:\n",
        "  print(\"it is a leap yerar\")\n",
        "else:\n",
        "  print(\"it is not leap year\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NJIQZneLUFdy",
        "outputId": "86c570db-bac6-47a2-8912-ed26760c203b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the year2020\n",
            "it is a leap yerar\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##find the root of quadratic equation"
      ],
      "metadata": {
        "id": "-CCWULTiU3zz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "n=int(input(\"Enter number:\"))\n",
        "temp=n\n",
        "rev=0\n",
        "while(n>0):\n",
        "    dig=n%10\n",
        "    rev=rev*10+dig\n",
        "    n=n//10\n",
        "if(temp==rev):\n",
        "    print(\"The number is a palindrome!\")\n",
        "else:\n",
        "    print(\"The number isn't a palindrome!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HkCvb_JGVFyB",
        "outputId": "af070d3e-dfde-47b5-c00b-dc69ddd9ede6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter number:52\n",
            "The number isn't a palindrome!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##swapping of two numbers"
      ],
      "metadata": {
        "id": "A5C-gkQLV4Iz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x = 5\n",
        "y = 7\n",
        "print (\"Before swapping: \")\n",
        "print(\"Value of x : \", x, \" and y : \", y)\n",
        "x, y = y, x\n",
        "print (\"After swapping: \")\n",
        "print(\"Value of x : \", x, \" and y : \", y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EZkgw5jLWWs6",
        "outputId": "16426400-d602-41c2-e9ca-dc559dc19d20"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Before swapping: \n",
            "Value of x :  5  and y :  7\n",
            "After swapping: \n",
            "Value of x :  7  and y :  5\n"
          ]
        }
      ]
    }
  ]
}